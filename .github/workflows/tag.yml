---
name: Release
"on":
  push:
    tags:
      - '*'

jobs:

  build:
    runs-on: ubuntu-20.04
    container: mfontani/gobuzz
    steps:
      - uses: actions/checkout@v2
      - run: go mod download
      # Sanity...
      - run: go test ./...
        env:
          TZ: UTC
      # Build #1: linux/amd64
      - run: ./.dev/build-static.sh
        env:
          GOOS: linux
          GOARCH: amd64
      - run: ./tstdin -help
      - run: sh -c '(echo foo ; sleep 1; echo bar ; sleep 1 ; echo baz) | ./tstdin'
      - run: xz --compress --stdout tstdin > tstdin.linux.amd64.xz
      # Build #2: windows/amd64
      - run: ./.dev/build-static.sh
        env:
          GOOS: windows
          GOARCH: amd64
      - run: mv tstdin tstdin.exe
      # Build #3: darwin/amd64
      - run: ./.dev/build-static.sh
        env:
          GOOS: darwin
          GOARCH: amd64
      - run: xz --compress --stdout tstdin > tstdin.darwin.amd64.xz
      # Upload artifacts...
      - uses: actions/upload-artifact@master
        with:
          name: tstdin.linux.amd64.xz
          path: tstdin.linux.amd64.xz
      - uses: actions/upload-artifact@master
        with:
          name: tstdin.exe
          path: tstdin.exe
      - uses: actions/upload-artifact@master
        with:
          name: tstdin.darwin.amd64.xz
          path: tstdin.darwin.amd64.xz

  release:
    needs: [build]
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url}}
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  upload:
    needs: [release]
    strategy:
      matrix:
        file:
          - tstdin.linux.amd64.xz
          - tstdin.exe
          - tstdin.darwin.amd64.xz
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ matrix.file }}
          path: .
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.file }}
          asset_name: ${{ matrix.file }}
